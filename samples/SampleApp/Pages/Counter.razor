@page "/counter"
@using Tizzani.QueryStringSerializer.Blazor
@inject NavigationManager NavigationManager

<PageTitle>Counter</PageTitle>

<h1>Counter</h1>

<p role="status">Current count: @State.CurrentCount</p>

<div class="d-flex gap-2 align-items-end">
    <div>
        <label class="form-label">Step</label>
        <input value="@State.Step" @onchange="OnStepChanged" class="form-control" step="1" type="number" />
    </div>
    <div>
        <button class="btn btn-primary" disabled="@(State.Step == 0)" @onclick="OnButtonClicked">
            Change count by @(State.Step > 0 ? "+" : "")@State.Step
        </button>
    </div>
    <div>
        <button class="btn btn-secondary" @onclick="Reset" type="reset">
            Reset
        </button>
    </div>
</div>

@code {

    private CounterState State = new(0, 1);

    protected override void OnAfterRender(bool firstRender)
    {
        var state = NavigationManager.GetQueryObject<CounterState>();

        if (state is null)
        {
            Reset();
        }
        else if (State != state)
        {
            State = state;
            StateHasChanged();
        }
    }

    private void OnButtonClicked()
    {
        UpdateState(State with { CurrentCount = State.CurrentCount + State.Step });
    }

    private void OnStepChanged(ChangeEventArgs e)
    {
        if (!int.TryParse(e.Value?.ToString(), out var value))
            return;

        var state = State with { Step = value };
        UpdateState(state);
    }

    private void Reset()
    {
        UpdateState(new CounterState(0, 1));
    }

    private void UpdateState(CounterState updatedState)
    {
        NavigationManager.NavigateToWithQuery("counter", updatedState);
    }

    public record CounterState(int CurrentCount, int Step);
}